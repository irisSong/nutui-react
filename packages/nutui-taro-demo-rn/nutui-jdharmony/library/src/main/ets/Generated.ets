
/**
* Generated.ets (组件工程)
* 本文件是由 @jd/oh-code_generator 自动生成的，请勿手动修改
* This file is automatically generated by @jd/oh-code_generator, please do not modify it manually.
* created by @jd/oh-code_generator(2.0.13)&typescript(4.9.5).
*/
import Want from '@ohos.app.ability.Want';
import AbilityConstant from '@ohos.app.ability.AbilityConstant'; 
import { JDRouter, JDRouterAsyncCallback, JDRouterOptions } from '@jd-oh/base-router';

export class Generated {
  /* export module info. */
  static ModuleInfo:string = '{"routers":["base/pages/button/index","base/pages/cell/index","base/pages/configprovider/index","base/pages/icon/index","base/pages/image/index","base/pages/overlay/index","business/pages/avatarcropper/index","business/pages/barrage/index","business/pages/card/index","business/pages/timeselect/index","business/pages/trendarrow/index","business/pages/watermark/index","dataentry/pages/menu/index","dataentry/pages/numberkeyboard/index","dataentry/pages/picker/index","dataentry/pages/radio/index","dataentry/pages/range/index","dataentry/pages/rate/index","dataentry/pages/searchbar/index","dataentry/pages/shortpassword/index","dataentry/pages/signature/index","dataentry/pages/switch/index","dataentry/pages/textarea/index","dataentry/pages/uploader/index","dentry/pages/address/index","dentry/pages/calendar/index","dentry/pages/calendarcard/index","dentry/pages/cascader/index","dentry/pages/checkbox/index","dentry/pages/datepicker/index","dentry/pages/form/index","dentry/pages/input/index","dentry/pages/inputnumber/index","exhibition/pages/animate/index","exhibition/pages/animatingnumbers/index","exhibition/pages/avatar/index","exhibition/pages/circleprogress/index","exhibition/pages/collapse/index","exhibition/pages/countdown/index","exhibition/pages/ellipsis/index","exhibition/pages/imagepreview/index","exhibition/pages/indicator/index","exhibition/pages/pagination/index","exhibition/pages/price/index","exhibition/pages/progress/index","exhibition/pages/steps/index","exhibition/pages/swiper/index","exhibition/pages/table/index","exhibition/pages/tag/index","exhibition/pages/tour/index","exhibition/pages/video/index","exhibition/pages/virtuallist/index","feedback/pages/actionsheet/index","feedback/pages/badge/index","feedback/pages/dialog/index","feedback/pages/drag/index","feedback/pages/empty/index","feedback/pages/infiniteloading/index","feedback/pages/loading/index","feedback/pages/noticebar/index","feedback/pages/notify/index","feedback/pages/popover/index","feedback/pages/popup/index","feedback/pages/pulltorefresh/index","feedback/pages/resultpage/index","feedback/pages/skeleton/index","feedback/pages/swipe/index","feedback/pages/toast/index","layout/pages/divider/index","layout/pages/grid/index","layout/pages/layout/index","layout/pages/safearea/index","layout/pages/space/index","layout/pages/sticky/index","nav/pages/backtop/index","nav/pages/elevator/index","nav/pages/fixednav/index","nav/pages/hoverbutton/index","nav/pages/navbar/index","nav/pages/sidenavbar/index","nav/pages/tabbar/index","nav/pages/tabs/index","pages/index/index"],"openApp":{},"modules":{}}';
  
  /* dispatch all callHandler. */
  static callHandler(methodName:string, params: Record<string,Object> | null, callback?:JDRouterAsyncCallback): Object | null {
    const exceptionFunc = JDRouter.handleCallHandlerException;
    return null;
  }
  
  /* dispatch all openHandler. */
  static openHandler(name:string, params: Record<string,Object> | null, callback?:JDRouterAsyncCallback): Object | null {
    const exceptionFunc = JDRouter.handleOpenHandlerException;
    return null;
  }
  
  /* launch item. */
  static onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {
  }
  
  /* lazy load components. */
  static lazyLoadComponent(options: JDRouterOptions, callback: JDRouterAsyncCallback): void {
    const builderFunc = JDRouter.lazyLoadComponentWrapBuilder;
    const exceptionFunc = JDRouter.handleLazyLoadException;
    if (options.routeName == 'base/pages/button/index') {
      import('./base/pages/button/index').then((component) => {
        builderFunc(options, component.get_f7aaba_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'base/pages/cell/index') {
      import('./base/pages/cell/index').then((component) => {
        builderFunc(options, component.get_b6fa15_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'base/pages/configprovider/index') {
      import('./base/pages/configprovider/index').then((component) => {
        builderFunc(options, component.get_92ccd0_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'base/pages/icon/index') {
      import('./base/pages/icon/index').then((component) => {
        builderFunc(options, component.get_47f90e_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'base/pages/image/index') {
      import('./base/pages/image/index').then((component) => {
        builderFunc(options, component.get_97c099_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'base/pages/overlay/index') {
      import('./base/pages/overlay/index').then((component) => {
        builderFunc(options, component.get_6984f2_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'business/pages/avatarcropper/index') {
      import('./business/pages/avatarcropper/index').then((component) => {
        builderFunc(options, component.get_29f050_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'business/pages/barrage/index') {
      import('./business/pages/barrage/index').then((component) => {
        builderFunc(options, component.get_0dbd04_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'business/pages/card/index') {
      import('./business/pages/card/index').then((component) => {
        builderFunc(options, component.get_f156ab_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'business/pages/timeselect/index') {
      import('./business/pages/timeselect/index').then((component) => {
        builderFunc(options, component.get_086d26_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'business/pages/trendarrow/index') {
      import('./business/pages/trendarrow/index').then((component) => {
        builderFunc(options, component.get_efbb11_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'business/pages/watermark/index') {
      import('./business/pages/watermark/index').then((component) => {
        builderFunc(options, component.get_e6e5b4_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dataentry/pages/menu/index') {
      import('./dataentry/pages/menu/index').then((component) => {
        builderFunc(options, component.get_6b086f_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dataentry/pages/numberkeyboard/index') {
      import('./dataentry/pages/numberkeyboard/index').then((component) => {
        builderFunc(options, component.get_592636_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dataentry/pages/picker/index') {
      import('./dataentry/pages/picker/index').then((component) => {
        builderFunc(options, component.get_963b90_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dataentry/pages/radio/index') {
      import('./dataentry/pages/radio/index').then((component) => {
        builderFunc(options, component.get_fd6dcc_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dataentry/pages/range/index') {
      import('./dataentry/pages/range/index').then((component) => {
        builderFunc(options, component.get_474eaa_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dataentry/pages/rate/index') {
      import('./dataentry/pages/rate/index').then((component) => {
        builderFunc(options, component.get_88458a_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dataentry/pages/searchbar/index') {
      import('./dataentry/pages/searchbar/index').then((component) => {
        builderFunc(options, component.get_800b49_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dataentry/pages/shortpassword/index') {
      import('./dataentry/pages/shortpassword/index').then((component) => {
        builderFunc(options, component.get_e8ad6c_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dataentry/pages/signature/index') {
      import('./dataentry/pages/signature/index').then((component) => {
        builderFunc(options, component.get_121bc7_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dataentry/pages/switch/index') {
      import('./dataentry/pages/switch/index').then((component) => {
        builderFunc(options, component.get_7ad933_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dataentry/pages/textarea/index') {
      import('./dataentry/pages/textarea/index').then((component) => {
        builderFunc(options, component.get_caa143_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dataentry/pages/uploader/index') {
      import('./dataentry/pages/uploader/index').then((component) => {
        builderFunc(options, component.get_a5ab8f_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dentry/pages/address/index') {
      import('./dentry/pages/address/index').then((component) => {
        builderFunc(options, component.get_561a42_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dentry/pages/calendar/index') {
      import('./dentry/pages/calendar/index').then((component) => {
        builderFunc(options, component.get_adb2c1_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dentry/pages/calendarcard/index') {
      import('./dentry/pages/calendarcard/index').then((component) => {
        builderFunc(options, component.get_6fbfc1_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dentry/pages/cascader/index') {
      import('./dentry/pages/cascader/index').then((component) => {
        builderFunc(options, component.get_04e395_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dentry/pages/checkbox/index') {
      import('./dentry/pages/checkbox/index').then((component) => {
        builderFunc(options, component.get_fa6294_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dentry/pages/datepicker/index') {
      import('./dentry/pages/datepicker/index').then((component) => {
        builderFunc(options, component.get_46bf9c_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dentry/pages/form/index') {
      import('./dentry/pages/form/index').then((component) => {
        builderFunc(options, component.get_d80284_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dentry/pages/input/index') {
      import('./dentry/pages/input/index').then((component) => {
        builderFunc(options, component.get_55b398_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'dentry/pages/inputnumber/index') {
      import('./dentry/pages/inputnumber/index').then((component) => {
        builderFunc(options, component.get_0936c8_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'exhibition/pages/animate/index') {
      import('./exhibition/pages/animate/index').then((component) => {
        builderFunc(options, component.get_6d837b_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'exhibition/pages/animatingnumbers/index') {
      import('./exhibition/pages/animatingnumbers/index').then((component) => {
        builderFunc(options, component.get_f50508_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'exhibition/pages/avatar/index') {
      import('./exhibition/pages/avatar/index').then((component) => {
        builderFunc(options, component.get_22d40b_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'exhibition/pages/circleprogress/index') {
      import('./exhibition/pages/circleprogress/index').then((component) => {
        builderFunc(options, component.get_dfa66b_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'exhibition/pages/collapse/index') {
      import('./exhibition/pages/collapse/index').then((component) => {
        builderFunc(options, component.get_b61471_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'exhibition/pages/countdown/index') {
      import('./exhibition/pages/countdown/index').then((component) => {
        builderFunc(options, component.get_143451_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'exhibition/pages/ellipsis/index') {
      import('./exhibition/pages/ellipsis/index').then((component) => {
        builderFunc(options, component.get_e236f4_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'exhibition/pages/imagepreview/index') {
      import('./exhibition/pages/imagepreview/index').then((component) => {
        builderFunc(options, component.get_2700ec_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'exhibition/pages/indicator/index') {
      import('./exhibition/pages/indicator/index').then((component) => {
        builderFunc(options, component.get_34ca64_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'exhibition/pages/pagination/index') {
      import('./exhibition/pages/pagination/index').then((component) => {
        builderFunc(options, component.get_285fa6_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'exhibition/pages/price/index') {
      import('./exhibition/pages/price/index').then((component) => {
        builderFunc(options, component.get_b88958_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'exhibition/pages/progress/index') {
      import('./exhibition/pages/progress/index').then((component) => {
        builderFunc(options, component.get_8aa032_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'exhibition/pages/steps/index') {
      import('./exhibition/pages/steps/index').then((component) => {
        builderFunc(options, component.get_a2da37_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'exhibition/pages/swiper/index') {
      import('./exhibition/pages/swiper/index').then((component) => {
        builderFunc(options, component.get_2a2204_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'exhibition/pages/table/index') {
      import('./exhibition/pages/table/index').then((component) => {
        builderFunc(options, component.get_276f25_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'exhibition/pages/tag/index') {
      import('./exhibition/pages/tag/index').then((component) => {
        builderFunc(options, component.get_8c0aa5_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'exhibition/pages/tour/index') {
      import('./exhibition/pages/tour/index').then((component) => {
        builderFunc(options, component.get_dc89e1_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'exhibition/pages/video/index') {
      import('./exhibition/pages/video/index').then((component) => {
        builderFunc(options, component.get_30902b_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'exhibition/pages/virtuallist/index') {
      import('./exhibition/pages/virtuallist/index').then((component) => {
        builderFunc(options, component.get_e4158d_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'feedback/pages/actionsheet/index') {
      import('./feedback/pages/actionsheet/index').then((component) => {
        builderFunc(options, component.get_838899_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'feedback/pages/badge/index') {
      import('./feedback/pages/badge/index').then((component) => {
        builderFunc(options, component.get_ee3792_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'feedback/pages/dialog/index') {
      import('./feedback/pages/dialog/index').then((component) => {
        builderFunc(options, component.get_69710c_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'feedback/pages/drag/index') {
      import('./feedback/pages/drag/index').then((component) => {
        builderFunc(options, component.get_b3599f_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'feedback/pages/empty/index') {
      import('./feedback/pages/empty/index').then((component) => {
        builderFunc(options, component.get_bc592b_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'feedback/pages/infiniteloading/index') {
      import('./feedback/pages/infiniteloading/index').then((component) => {
        builderFunc(options, component.get_d4bf23_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'feedback/pages/loading/index') {
      import('./feedback/pages/loading/index').then((component) => {
        builderFunc(options, component.get_8020b8_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'feedback/pages/noticebar/index') {
      import('./feedback/pages/noticebar/index').then((component) => {
        builderFunc(options, component.get_b52ed2_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'feedback/pages/notify/index') {
      import('./feedback/pages/notify/index').then((component) => {
        builderFunc(options, component.get_859372_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'feedback/pages/popover/index') {
      import('./feedback/pages/popover/index').then((component) => {
        builderFunc(options, component.get_d2df75_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'feedback/pages/popup/index') {
      import('./feedback/pages/popup/index').then((component) => {
        builderFunc(options, component.get_95040f_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'feedback/pages/pulltorefresh/index') {
      import('./feedback/pages/pulltorefresh/index').then((component) => {
        builderFunc(options, component.get_755c46_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'feedback/pages/resultpage/index') {
      import('./feedback/pages/resultpage/index').then((component) => {
        builderFunc(options, component.get_94a011_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'feedback/pages/skeleton/index') {
      import('./feedback/pages/skeleton/index').then((component) => {
        builderFunc(options, component.get_b8c637_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'feedback/pages/swipe/index') {
      import('./feedback/pages/swipe/index').then((component) => {
        builderFunc(options, component.get_2b5702_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'feedback/pages/toast/index') {
      import('./feedback/pages/toast/index').then((component) => {
        builderFunc(options, component.get_17d17c_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'layout/pages/divider/index') {
      import('./layout/pages/divider/index').then((component) => {
        builderFunc(options, component.get_016f1e_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'layout/pages/grid/index') {
      import('./layout/pages/grid/index').then((component) => {
        builderFunc(options, component.get_e7c86f_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'layout/pages/layout/index') {
      import('./layout/pages/layout/index').then((component) => {
        builderFunc(options, component.get_dd9779_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'layout/pages/safearea/index') {
      import('./layout/pages/safearea/index').then((component) => {
        builderFunc(options, component.get_e9537b_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'layout/pages/space/index') {
      import('./layout/pages/space/index').then((component) => {
        builderFunc(options, component.get_c7067a_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'layout/pages/sticky/index') {
      import('./layout/pages/sticky/index').then((component) => {
        builderFunc(options, component.get_2c4055_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'nav/pages/backtop/index') {
      import('./nav/pages/backtop/index').then((component) => {
        builderFunc(options, component.get_69bac7_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'nav/pages/elevator/index') {
      import('./nav/pages/elevator/index').then((component) => {
        builderFunc(options, component.get_04da67_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'nav/pages/fixednav/index') {
      import('./nav/pages/fixednav/index').then((component) => {
        builderFunc(options, component.get_71662f_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'nav/pages/hoverbutton/index') {
      import('./nav/pages/hoverbutton/index').then((component) => {
        builderFunc(options, component.get_fd23c1_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'nav/pages/navbar/index') {
      import('./nav/pages/navbar/index').then((component) => {
        builderFunc(options, component.get_80ec5e_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'nav/pages/sidenavbar/index') {
      import('./nav/pages/sidenavbar/index').then((component) => {
        builderFunc(options, component.get_2f0312_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'nav/pages/tabbar/index') {
      import('./nav/pages/tabbar/index').then((component) => {
        builderFunc(options, component.get_78f209_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'nav/pages/tabs/index') {
      import('./nav/pages/tabs/index').then((component) => {
        builderFunc(options, component.get_9d5049_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    } else if (options.routeName == 'pages/index/index') {
      import('./pages/index/index').then((component) => {
        builderFunc(options, component.get_6157c4_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    }
  }
}
