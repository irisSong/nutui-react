
/**
* Generated.ets (组件工程)
* 本文件是由 @jd/oh-code_generator 自动生成的，请勿手动修改
* This file is automatically generated by @jd/oh-code_generator, please do not modify it manually.
* created by @jd/oh-code_generator(2.0.15)&typescript(4.9.5).
*/
import Want from '@ohos.app.ability.Want';
import AbilityConstant from '@ohos.app.ability.AbilityConstant'; 
import { JDRouter, JDRouterAsyncCallback, JDRouterOptions } from '@jd-oh/base-router';

export class Generated {
  /* dispatch all callHandler. */
  static callHandler(methodName:string, params: Record<string,Object> | null, callback?:JDRouterAsyncCallback): Object | null {
    const exceptionFunc = JDRouter.handleCallHandlerException;
    return null;
  }
  
  /* dispatch all openHandler. */
  static openHandler(name:string, params: Record<string,Object> | null, callback?:JDRouterAsyncCallback): Object | null {
    const exceptionFunc = JDRouter.handleOpenHandlerException;
    return null;
  }
  
  /* launch item. */
  static onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {
  }
  
  /* lazy load components. */
  static lazyLoadComponent(options: JDRouterOptions, callback: JDRouterAsyncCallback): void {
    const builderFunc = JDRouter.lazyLoadComponentWrapBuilder;
    const exceptionFunc = JDRouter.handleLazyLoadException;
    if (options.routeName == 'home') {
      import('./components/pages/Home').then((component) => {
        builderFunc(options, component.get_106a6c_wrapper(), callback);
      }).catch((e: Object) => {
        exceptionFunc(options, e, callback);
      });
    }
  }
}
